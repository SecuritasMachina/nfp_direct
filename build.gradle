buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

group = 'com.ackdev'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

war {
    project.version = 'v1.1.0';
}

task deployNFP(dependsOn: war) {
    doLast {
        copy {
            from "build/libs"
            into System.getProperties().getProperty("ORG_GRADLE_PROJECT_TOMCAT_DEST")
            rename { String fileName ->
                fileName.replace("nfp-v1.1.0.war", "nfp.war")
            }
        }
    }
}
task setHttpProxyFromEnv {
    def map = ['HTTP_PROXY': 'http', 'HTTPS_PROXY': 'https']
    for (e in System.getenv()) {
        def key = e.key.toUpperCase()
        if (key in map) {
            def base = map[key]
            def url = e.value.toURL()
            println " - systemProp.${base}.proxy=${url.host}:${url.port}"
            System.setProperty("${base}.proxyHost", url.host.toString())
            System.setProperty("${base}.proxyPort", url.port.toString())
        }
    }
}

build.dependsOn setHttpProxyFromEnv

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.1.3.RELEASE'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat:2.1.3.RELEASE'

    implementation('org.springframework.boot:spring-boot-starter-data-jpa:2.1.3.RELEASE')

    implementation('org.springframework.boot:spring-boot-starter-data-rest:2.1.3.RELEASE')
    compile group: 'com.google.guava', name: 'guava', version: '27.0.1-jre'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

    compile group: 'javax.xml', name: 'jaxb-api', version: '2.1'

    runtimeOnly('com.h2database:h2')
    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}
